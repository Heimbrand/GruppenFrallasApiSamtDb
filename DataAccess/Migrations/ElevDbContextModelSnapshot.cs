// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ElevDbContext))]
    partial class ElevDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Elev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkolaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkolaId");

                    b.ToTable("Elever");
                });

            modelBuilder.Entity("DataAccess.Entities.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kurser");
                });

            modelBuilder.Entity("DataAccess.Entities.Skola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skolor");
                });

            modelBuilder.Entity("ElevKurs", b =>
                {
                    b.Property<int>("EleverId")
                        .HasColumnType("int");

                    b.Property<int>("KurserId")
                        .HasColumnType("int");

                    b.HasKey("EleverId", "KurserId");

                    b.HasIndex("KurserId");

                    b.ToTable("ElevKurs");
                });

            modelBuilder.Entity("KursSkola", b =>
                {
                    b.Property<int>("KurserId")
                        .HasColumnType("int");

                    b.Property<int>("SkolorId")
                        .HasColumnType("int");

                    b.HasKey("KurserId", "SkolorId");

                    b.HasIndex("SkolorId");

                    b.ToTable("KursSkola");
                });

            modelBuilder.Entity("DataAccess.Entities.Elev", b =>
                {
                    b.HasOne("DataAccess.Entities.Skola", null)
                        .WithMany("Elever")
                        .HasForeignKey("SkolaId");
                });

            modelBuilder.Entity("ElevKurs", b =>
                {
                    b.HasOne("DataAccess.Entities.Elev", null)
                        .WithMany()
                        .HasForeignKey("EleverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Kurs", null)
                        .WithMany()
                        .HasForeignKey("KurserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KursSkola", b =>
                {
                    b.HasOne("DataAccess.Entities.Kurs", null)
                        .WithMany()
                        .HasForeignKey("KurserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Skola", null)
                        .WithMany()
                        .HasForeignKey("SkolorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.Skola", b =>
                {
                    b.Navigation("Elever");
                });
#pragma warning restore 612, 618
        }
    }
}
